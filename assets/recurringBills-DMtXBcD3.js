import{a as m}from"./config-DsdTllfp.js";import{g}from"./transactions.mocks-Hj1TqFN2.js";import{h as o}from"./autoImport-CyN5WCm3.js";import{d as c,H as i}from"./delay-CL5DqagV.js";import"./index-C032iH88.js";import"./browser-B2Hdm9tx.js";const d=r=>{const a=new Date(r).getDate();return`Monthly-${a}${(n=>{if(n>3&&n<21)return"th";switch(n%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}})(a)}`},u=()=>{const t=g().filter(e=>e.recurring),a=new Map;return t.forEach(e=>{const n={avatar:e.avatar,name:e.name,date:e.date,dueDate:d(e.date),amount:e.amount>=0?e.amount:-e.amount,status:e.amount>=0?"paid":"due"};if(!a.has(e.name))a.set(e.name,n);else{const s=a.get(e.name);s&&new Date(e.date).getTime()>new Date(s.date).getTime()&&(n.date=s.date,a.set(e.name,n))}}),Array.from(a.values())},f=r=>u().filter(t=>t.name.toLocaleLowerCase().includes(r.toLocaleLowerCase())),p=r=>u().sort((t,a)=>{let e=0;switch(r){case"latest":e=new Date(a.date).getTime()-new Date(t.date).getTime();break;case"oldest":e=new Date(t.date).getTime()-new Date(a.date).getTime();break;case"az":e=t.name.localeCompare(a.name);break;case"za":e=a.name.localeCompare(t.name);break;case"highest":e=a.amount-t.amount;break;case"lowest":e=t.amount-a.amount;break}return e}),l=m.mockBaseURL,y=[o.get(`${l}/recurringBills`,async({})=>{await c(1);const r=u();return i.json({code:200,data:r})}),o.get(`${l}/recurringBills/:name`,async({params:r})=>{await c(1);const t=f(r.name);return i.json({code:200,data:t})}),o.get(`${l}/recurringBills/sort/:sort`,async({params:r})=>{await c(1);const t=p(r.sort);return i.json({code:200,data:t})})];export{y as default};
